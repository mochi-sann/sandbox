// Generated by Haxe 4.3.0
#include <hxcpp.h>

#ifndef INCLUDED_Hello
#include <Hello.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_7739d8dd15e92924_4_main,"Hello","main",0x20e85735,"Hello.main","Hello.hx",4,0x257b830c)

void Hello_obj::__construct() { }

Dynamic Hello_obj::__CreateEmpty() { return new Hello_obj; }

void *Hello_obj::_hx_vtable = 0;

Dynamic Hello_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Hello_obj > _hx_result = new Hello_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Hello_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x547e7832;
}

void Hello_obj::main(){
            	HX_STACKFRAME(&_hx_pos_7739d8dd15e92924_4_main)
HXDLIN(   4)		::haxe::Log_obj::trace(HX_("Hello World",84,f6,db,6f),::hx::SourceInfo(HX_("Hello.hx",0c,83,7b,25),4,HX_("Hello",f2,a2,ee,b7),HX_("main",39,38,56,48)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Hello_obj,main,(void))


Hello_obj::Hello_obj()
{
}

bool Hello_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Hello_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Hello_obj_sStaticStorageInfo = 0;
#endif

::hx::Class Hello_obj::__mClass;

static ::String Hello_obj_sStaticFields[] = {
	HX_("main",39,38,56,48),
	::String(null())
};

void Hello_obj::__register()
{
	Hello_obj _hx_dummy;
	Hello_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Hello",f2,a2,ee,b7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Hello_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Hello_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Hello_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Hello_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Hello_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}


// Generated by Haxe 4.3.0
#ifndef INCLUDED_Hello
#define INCLUDED_Hello

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Hello)



class HXCPP_CLASS_ATTRIBUTES Hello_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Hello_obj OBJ_;
		Hello_obj();

	public:
		enum { _hx_ClassId = 0x547e7832 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Hello")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"Hello"); }

		inline static ::hx::ObjectPtr< Hello_obj > __new() {
			::hx::ObjectPtr< Hello_obj > __this = new Hello_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Hello_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Hello_obj *__this = (Hello_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Hello_obj), false, "Hello"));
			*(void **)__this = Hello_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Hello_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Hello",f2,a2,ee,b7); }

		static void main();
		static ::Dynamic main_dyn();

};


#endif /* INCLUDED_Hello */ 

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    aaaaa: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/pdca_file_2.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        name="aaaaa"
        castShadow
        receiveShadow
        geometry={nodes.aaaaa.geometry}
        material={materials.Material}
        position={[-1, 0, 0.3]}
        scale={2}
        userData={{ name: "aaaaa" }}
      />
    </group>
  );
}


useGLTF.preload("/pdca_file_2.glb");

